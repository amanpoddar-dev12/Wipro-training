class Car {
    car:string;
    color:string;
    constructor(x:string,y:string){
this.car = x;
this.color = y;
    }
    printCar(){
        console.log(this.car + ' '+this.color)
    }
}
let c = new Car("volvo","blue");
c.printCar();



Interface

interface Car1{
    car:string,color:string
}
export class Car {
    public car:string;
    public color:string;
    constructor(private c:Car1){
this.car = c.car;
this.color = c.color;
    }
    printCar(){
        console.log(this.car + ' '+this.color)
    }
}
let c = new Car({car:"volvo",color:"blue"});
c.printCar();




Spread opearator
//spread operator
let a = [1,2,3,4];
let b = [5,6,7,8];
let c = a.concat(b);
let d = [...a,...b];





Arrow function

//arrow function
function a(x:string,y:string){
console.log(x);
}
const a1 = (x:string,y:string)=>console.log(x);